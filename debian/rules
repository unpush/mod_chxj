#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)


CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

# shared library versions, option 1
version=2.0.5
major=2
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
#version=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
#major=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

config.status: configure
	dh_testdir
	CFLAGS="$(CFLAGS)  " ./configure --enable-mysql-cookie --with-mysql-header=/usr/include/mysql --with-mysql-lib-dir=/usr/lib



build: build-stamp
build-stamp:  config.status
	dh_testdir

	$(MAKE) all

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	# Add here commands to clean up after the build process.
	-$(MAKE) clean
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	rm -f ./config.sub && cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	rm -f ./config.guess && cp -f /usr/share/misc/config.guess config.guess
endif


	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	@if test ! -L src/mod_chxj.so ; then cp src/.libs/libmod_chxj.so src/mod_chxj.so ; fi

	# Add here commands to install the package into debian/tmp
	mkdir -p \
		$(CURDIR)/debian/libapache2-mod-chxj/usr/lib/apache2/modules
	/usr/share/apache2/build/instdso.sh SH_LIBTOOL='/usr/bin/libtool' $(CURDIR)/src/mod_chxj.so \
		$(CURDIR)/debian/libapache2-mod-chxj/usr/lib/apache2/modules
	mkdir -p \
		$(CURDIR)/debian/libapache2-mod-chxj/etc/apache2/mods-available
	install -m 644 debian/chxj.load \
		$(CURDIR)/debian/libapache2-mod-chxj/etc/apache2/mods-available
	mkdir -p \
		$(CURDIR)/debian/libapache2-mod-chxj/usr/share/doc/libapache2-mod-chxj/examples
	install -m 644 etc/*.xml \
		$(CURDIR)/debian/libapache2-mod-chxj/usr/share/doc/libapache2-mod-chxj/examples
	install -m 644 doc/*.html \
		$(CURDIR)/debian/libapache2-mod-chxj/usr/share/doc/libapache2-mod-chxj


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
